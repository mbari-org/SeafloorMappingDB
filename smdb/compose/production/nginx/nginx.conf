# nginx.conf for production.yml
user docker_user;
events {
    worker_connections 1024;
}

http {
    # cf http://blog.maxcdn.com/accept-encoding-its-vary-important/
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_types *;

    # http://nginx.org/en/docs/http/configuring_https_servers.html#optimization
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 10m;

    server_tokens off;

    # https://docs.gunicorn.org/en/stable/deploy.html
    upstream app_server {
        server django:5000 fail_timeout=0;
    }

    server {
        # rewrite all HTTP to HTTPS
        listen 80;
        server_name smdb.shore.mbari.org;
        return 301 https://smdb.shore.mbari.org$request_uri;
        # Use for testing on development system
        ##server_name localhost;
        ##return 301 https://localhost$request_uri;
    }

    server {
        listen 443 ssl default_server;
        server_name smdb.shore.mbari.org;
        # Use for testing on development system
        ##server_name localhost;

        # see http://nginx.org/en/docs/http/configuriNGINX_https_servers.html
        # (That's great naming of a URL "...configuriNGINX...")
        ssl_certificate /etc/ssl/certs/smdb.crt;
        ssl_certificate_key /etc/ssl/private/smdb.key;
 
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # ie defaults minus SSLv3

        ##location /static {
        ##    alias /srv/static-files;
        ##
        ##    # http://stackoverflow.com/q/19213510/1346257
        ##    include /etc/nginx/mime.types;
        ##}

        ##location /media {
        ##    alias /srv/media-files;
        ##    include /etc/nginx/mime.types;
        ##}

        location /SeafloorMapping {
            alias /srv/SeafloorMapping;
            include /etc/nginx/mime.types;
        }

        location = /robots.txt { return 200 "User-agent: *\nAllow: /"; }
        location = /favicon.ico { access_log off; log_not_found off; return 404; }

        #Prevent serving of sysfiles / vim backup files
        location ~ /\.          { access_log off; log_not_found off; deny all; }
        location ~ ~$           { access_log off; log_not_found off; deny all; }

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;
        }
    }
}

